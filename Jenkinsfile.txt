pipeline {
    agent any

    stages {
        stage('Build') {
            steps {
                script {
                    def buildStatus = sh(script: 'docker build -t hospital-management-system .', returnStatus: true)
                    if (buildStatus != 0) {
                        error("Build failed with status: ${buildStatus}")
                    }
                }
            }
        }
        stage('Test') {
            steps {
                script {
                    def testStatus = sh(script: 'docker run hospital-management-system test', returnStatus: true)
                    if (testStatus != 0) {
                        error("Tests failed with status: ${testStatus}")
                    }
                }
            }
        }
        stage('Deploy') {
            steps {
                script {
                    catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {
                        sh '''
                        docker stop hospital-container || true
                        docker rm hospital-container || true
                        docker run -d --name hospital-container -p 80:80 hospital-management-system
                        '''
                    }
                }
            }
        }
    }
}
